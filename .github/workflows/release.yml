name: Release
concurrency: Release
on:
  push:
    branches: [main]
    tags: ["v*"]
jobs:
  release:
    name: 🚀 Release
    runs-on: ubuntu-22.04
    steps:
      - name: ⬇️ Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: ☕ Install JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: sbt

      - name: 📦 Install gnupg
        run: sudo apt update && sudo apt install -y gnupg

      - name: 🔑 Import PGP secret
        run: echo "${{ secrets.PGP_SECRET }}" | base64 --decode | gpg --batch --import

      - name: 👻 Cache SBT
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.coursier
          key: ${{ runner.os }}-sbt-${{ hashfiles('**/build.sbt', 'project/plugins.sbt', 'project/Dependencies.scala') }}

      - name: 🔖 Create version tag
        run: sbt +test ciReleaseTagNextVersion

      - name: 🔄 Refresh version tag
        run: git pull --tags

      - name: 🏷️ Retrieve version tag
        id: version
        run: echo version="v$(sbt "print pillars-core/version" --error 2>/dev/null)" >> ${GITHUB_OUTPUT}

      - name: 📝 Update CHANGELOG
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ github.token }}
          tag: ${{ steps.version.outputs.version }}

      - name: 📦 Create Release
        uses: ncipollo/release-action@v1.12.0
        with:
          allowUpdates: true
          draft: false
          makeLatest: true
          name: ${{ steps.version.outputs.version }}
          body: ${{ steps.changelog.outputs.changes }}
          token: ${{ github.token }}

      - name: ✍️ Commit CHANGELOG.md
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: main
          commit_message: 'docs: update CHANGELOG.md for ${{ steps.version.outputs.version }} [skip ci]'
          file_pattern: 'CHANGELOG.md docToolchainConfig.groovy'

      - name: 📤 Publish to Sonatype
        run: sbt ciReleaseSonatype
        env:
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}

  website:
    name: 🌐 Publish website
    runs-on: ubuntu-latest
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    env:
      DTC_HEADLESS: true
    steps:
      - name: ⬇️ Checkout project
        uses: actions/checkout@v4

      - name: 🔧 Setup
        run: chmod +x dtcw

      - name: ☕ Install JDK 19
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 19

      - name: 📦 Cache SBT
        uses: actions/cache@v3
        with:
          path: |
            .ivy2
            .sbt
          key: pillars-cache-${{ hashFiles('build.sbt', 'plugins.sbt') }}
          restore-keys: |
            pillars-cache-${{ hashFiles('build.sbt', 'plugins.sbt') }}

      - name: 📊 Get latest version
        run: echo version=$(sbt "print pillars-core/version" --error 2>/dev/null) >> ${GITHUB_OUTPUT}

      - name: 📝 Generate site
        run: ./dtcw generateSite && sbt unidoc
        env:
          PILLARS_VERSION: ${{ steps.version.outputs.version }}

      - name: 📄 Copy to public
        run: cp -r ./target/microsite/output ./public

      - name: 🚀 Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          cname: pillars.dev
          enable_jekyll: false

